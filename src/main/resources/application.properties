#spring.mvc.pathmatch.matching-strategy=ant-path-matcher
openweathermap.api.key=${OPENWEATHERMAP_API_KEY:``}
openweathermap.api.url=https://api.openweathermap.org
openweathermap.api.endpoint=data/2.5/forecast
openweathermap.api.noOfResponseForDay=8
openweathermap.api.apiTimeOut=5000
server.port=8080

#Eureka config
spring.application.name=weather-ms
eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka

# uncomment to avoid eureka from registering itself, you add this to the application.properties

eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false

# actuator
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

#circuit breaker
resilience4j.circuitbreaker.instances.weatherApiCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.weatherApiCircuitBreaker.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.weatherApiCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.weatherApiCircuitBreaker.minimumNumberOfCalls=2
resilience4j.circuitbreaker.instances.weatherApiCircuitBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.weatherApiCircuitBreaker.waitDurationInOpenState=5000ms
resilience4j.circuitbreaker.instances.weatherApiCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.weatherApiCircuitBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.weatherApiCircuitBreaker.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.weatherForecastCircuitBreaker.slowCallRateThreshold=50
# if 50 % request fail change to open

springdoc.paths-to-match=/v1/weather, /v2/weather
springdoc.packages-to-scan=publicis.sapient.weathermicroservice.controller

